{"ast":null,"code":"import * as go from 'gojs';\nimport { DiagramComponent } from 'gojs-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"gojs-angular\";\nconst _c0 = [\"myDiag\"];\nexport let GodTreeComponent = /*#__PURE__*/(() => {\n  class GodTreeComponent {\n    constructor() {\n      this.name = 'Angular';\n      this.familyData = [{\n        \"key\": 1,\n        \"name\": \"Uranus (Heaven)\",\n        \"title\": \"Caelus\"\n      }, {\n        \"key\": 2,\n        \"name\": \"Gaea (Earth)\",\n        \"title\": \"Terra\"\n      }, {\n        \"key\": 3,\n        \"name\": \"Cronus\",\n        \"title\": \"Saturn\",\n        \"parent\": 1\n      }, {\n        \"key\": 4,\n        \"name\": \"Rhea\",\n        \"title\": \"Ops\",\n        \"parent\": 1\n      }, {\n        \"key\": 5,\n        \"name\": \"Coeus\",\n        \"title\": \"Polus\",\n        \"parent\": 1\n      }, {\n        \"key\": 6,\n        \"name\": \"Phoebe\",\n        \"title\": \" \",\n        \"parent\": 1\n      }, {\n        \"key\": 7,\n        \"name\": \"Ocean\",\n        \"title\": \" \",\n        \"parent\": 1\n      }, {\n        \"key\": 8,\n        \"name\": \"Tethya\",\n        \"title\": \" \",\n        \"parent\": 1\n      }, {\n        \"key\": 9,\n        \"name\": \"Hestia\",\n        \"title\": \"Vesta\",\n        \"parent\": 3\n      }, {\n        \"key\": 10,\n        \"name\": \"Hades\",\n        \"title\": \"Pluto\",\n        \"parent\": 3\n      }, {\n        \"key\": 11,\n        \"name\": \"Poseidon\",\n        \"title\": \"Neptune\",\n        \"parent\": 3\n      }, {\n        \"key\": 12,\n        \"name\": \"Zeus\",\n        \"title\": \"Jupiter\",\n        \"parent\": 3\n      }, {\n        \"key\": 13,\n        \"name\": \"Hera\",\n        \"title\": \"Juno\",\n        \"parent\": 3\n      }, {\n        \"key\": 14,\n        \"name\": \"Demeter\",\n        \"title\": \"Ceres\",\n        \"parent\": 3\n      }, {\n        \"key\": 15,\n        \"name\": \"Zeus\",\n        \"title\": \"Jupiter\",\n        \"parent\": 3\n      }, {\n        \"key\": 16,\n        \"name\": \"Zeus\",\n        \"title\": \"Jupiter\",\n        \"parent\": 5\n      }, {\n        \"key\": 17,\n        \"name\": \"Leto\",\n        \"title\": \" \",\n        \"parent\": 5\n      }, {\n        \"key\": 18,\n        \"name\": \"Iapetus\",\n        \"title\": \" \",\n        \"parent\": 7\n      }, {\n        \"key\": 19,\n        \"name\": \"Athena\",\n        \"title\": \"Minerva\",\n        \"parent\": 12\n      }, {\n        \"key\": 20,\n        \"name\": \"Ares\",\n        \"title\": \"Mars\",\n        \"parent\": 13\n      }, {\n        \"key\": 21,\n        \"name\": \"Hebe\",\n        \"title\": \" \",\n        \"parent\": 13\n      }, {\n        \"key\": 22,\n        \"name\": \"Hephaestus\",\n        \"title\": \"Vulcan\",\n        \"parent\": 13\n      }, {\n        \"key\": 23,\n        \"name\": \"Persephone\",\n        \"title\": \"Proserpine\",\n        \"parent\": 14\n      }, {\n        \"key\": 24,\n        \"name\": \"Apollo\",\n        \"title\": \"Apollo\",\n        \"parent\": 5\n      }, {\n        \"key\": 25,\n        \"name\": \"Artmeis\",\n        \"title\": \"Diana\",\n        \"parent\": 5\n      }, {\n        \"key\": 26,\n        \"name\": \"Prometheus\",\n        \"title\": \"\",\n        \"parent\": 18\n      }, {\n        \"key\": 27,\n        \"name\": \"Atlas\",\n        \"title\": \" \",\n        \"parent\": 18\n      }, {\n        \"key\": 28,\n        \"name\": \"Epimethues\",\n        \"title\": \" \",\n        \"parent\": 18\n      }, {\n        \"key\": 29,\n        \"name\": \"Zeus\",\n        \"title\": \"Jupiter\",\n        \"parent\": 27\n      }, {\n        \"key\": 30,\n        \"name\": \"Maia\",\n        \"title\": \" \",\n        \"parent\": 27\n      }, {\n        \"key\": 31,\n        \"name\": \"Zeus\",\n        \"title\": \"Jupiter\",\n        \"parent\": 28\n      }, {\n        \"key\": 32,\n        \"name\": \"Dione\",\n        \"title\": \" \",\n        \"parent\": 28\n      }, {\n        \"key\": 33,\n        \"name\": \"Hermes\",\n        \"title\": \"Mercury\",\n        \"parent\": 27\n      }, {\n        \"key\": 34,\n        \"name\": \"Aphrodite\",\n        \"title\": \" \",\n        \"parent\": 28\n      }, {\n        \"key\": 35,\n        \"name\": \"\",\n        \"title\": \" \",\n        \"parent\": 21\n      }];\n      this.diagramDivClassName = 'myDiagramDiv';\n      this.diagramModelData = {\n        prop: 'value',\n        color: 'red'\n      };\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      const $ = go.GraphObject.make;\n      const appComp = this;\n    }\n\n    initDiagram() {\n      const $ = go.GraphObject.make;\n      const dia = $(go.Diagram, {\n        maxSelectionCount: 1,\n        validCycle: go.Diagram.CycleDestinationTree,\n        \"clickCreatingTool.archetypeNodeData\": {\n          name: \"(new person)\",\n          title: \"\",\n          comments: \"\"\n        },\n        \"clickCreatingTool.insertPart\": function (loc) {\n          var node = go.ClickCreatingTool.prototype.insertPart.call(this, loc);\n\n          if (node !== null) {//this.diagram.select(node);\n            //this.diagram.commandHandler.scrollToPart(node);\n            //this.diagram.commandHandler.editTextBlock(node.findObject(\"NAMETB\"));\n          }\n\n          return node;\n        },\n        layout: $(go.TreeLayout, {\n          treeStyle: go.TreeLayout.StyleLastParents,\n          arrangement: go.TreeLayout.ArrangementHorizontal,\n          // properties for most of the tree:\n          angle: 90,\n          layerSpacing: 35,\n          // properties for the \"last parents\":\n          alternateAngle: 90,\n          alternateLayerSpacing: 35,\n          alternateAlignment: go.TreeLayout.AlignmentBus,\n          alternateNodeSpacing: 20\n        }),\n        \"undoManager.isEnabled\": true // enable undo & redo\n\n      });\n      var levelColors = [\"#AC193D\", \"#2672EC\", \"#8C0095\", \"#5133AB\", \"#008299\", \"#D24726\", \"#008A00\", \"#094AB2\"]; // This function provides a common style for most of the TextBlocks.\n      // Some of these values may be overridden in a particular TextBlock.\n\n      function textStyle() {\n        return {\n          font: \"10pt  Segoe UI,sans-serif\",\n          stroke: \"white\"\n        };\n      } // This converter is used by the Picture.\n\n\n      function findHeadShot(key) {\n        if (key < 1 || key > 35) return \"../../assets/god_icon/nopic.jpg\"; // There are only 16 images on the server\n\n        return \"/sherylMythology/assets/god_icon/\" + key + \".jpg\";\n      } // define the Node template\n\n\n      dia.nodeTemplate = $(go.Node, \"Auto\", // for sorting, have the Node.text be the data.name\n      new go.Binding(\"text\", \"name\"), // bind the Part.layerName to control the Node's layer depending on whether it isSelected\n      new go.Binding(\"layerName\", \"isSelected\", sel => sel ? \"Foreground\" : \"\").ofObject(), // define the node's outer shape\n      $(go.Shape, \"Rectangle\", {\n        name: \"SHAPE\",\n        fill: \"#333333\",\n        stroke: 'white',\n        strokeWidth: 3.5,\n        // set the port properties:\n        portId: \"\",\n        fromLinkable: true,\n        toLinkable: true,\n        cursor: \"pointer\"\n      }), $(go.Panel, \"Horizontal\", $(go.Picture, {\n        name: \"Picture\",\n        desiredSize: new go.Size(70, 70),\n        margin: 1.5\n      }, new go.Binding(\"source\", \"key\", findHeadShot)), // define the panel where the text will appear\n      $(go.Panel, \"Table\", {\n        minSize: new go.Size(130, NaN),\n        maxSize: new go.Size(160, NaN),\n        margin: new go.Margin(6, 10, 0, 6),\n        defaultAlignment: go.Spot.Left\n      }, $(go.RowColumnDefinition, {\n        column: 2,\n        width: 4\n      }), $(go.TextBlock, textStyle(), // the name\n      {\n        row: 0,\n        column: 0,\n        columnSpan: 5,\n        font: \"15pt Segoe UI,sans-serif\",\n        editable: true,\n        isMultiline: false,\n        minSize: new go.Size(10, 16)\n      }, new go.Binding(\"text\", \"name\").makeTwoWay()), $(go.TextBlock, textStyle(), {\n        row: 1,\n        column: 0,\n        columnSpan: 4,\n        editable: true,\n        isMultiline: false,\n        minSize: new go.Size(10, 14)\n      }, new go.Binding(\"text\", \"title\").makeTwoWay())) // end Table Panel\n      ) // end Horizontal Panel\n      ); // end Node\n      // define the Link template\n\n      dia.linkTemplate = $(go.Link, go.Link.Orthogonal, {\n        corner: 5,\n        relinkableFrom: true,\n        relinkableTo: true\n      }, $(go.Shape, {\n        strokeWidth: 1.5,\n        stroke: \"black\"\n      })); // the link shape\n      // read in the JSON-format data from the \"mySavedModel\" element\n\n      dia.model = new go.TreeModel(this.familyData); // make sure new data keys are unique positive integers\n\n      var lastkey = 1;\n\n      dia.model.makeUniqueKeyFunction = (model, data) => {\n        var k = data['key'] || lastkey;\n\n        while (model.findNodeDataForKey(k)) k++;\n\n        data['key'] = lastkey = k;\n        return k;\n      };\n\n      dia.initialAutoScale = go.Diagram.Uniform;\n      this.dia = dia;\n      return dia;\n    }\n\n    buttonCallback(e, obj) {\n      console.log('e2: ', e.diagram.model.modelData.color);\n      console.log('this: ', this.name);\n    }\n\n    onModelChange($event) {\n      console.log('Event: ', $event);\n    }\n\n  }\n\n  GodTreeComponent.ɵfac = function GodTreeComponent_Factory(t) {\n    return new (t || GodTreeComponent)();\n  };\n\n  GodTreeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GodTreeComponent,\n    selectors: [[\"god-tree\"]],\n    viewQuery: function GodTreeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DiagramComponent, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.diagramComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myDiag = _t.first);\n      }\n    },\n    decls: 32,\n    vars: 4,\n    consts: [[\"id\", \"godtreepage\"], [2, \"text-align\", \"center\", \"margin-bottom\", \"0px\", \"font-size\", \"400%\", \"font-family\", \"Margadeth\"], [2, \"font-style\", \"italic\", \"margin-top\", \"0px\", \"text-align\", \"center\", \"padding-left\", \"17%\", \"font-size\", \"250%\"], [2, \"margin-right\", \"0px\"], [1, \"row\"], [1, \"col-md-1\", 2, \"background-color\", \"#333\"], [1, \"col-md-10\", 2, \"background-color\", \"#333\"], [2, \"margin-bottom\", \"0px\"], [\"href\", \"/sherylMythology\"], [\"routerLink\", \"/godTree\"], [\"routerLink\", \"/godList\"], [\"routerLink\", \"/heroList\"], [\"routerLink\", \"/flowerList\"], [\"routerLink\", \"/reference\"], [3, \"initDiagram\", \"modelData\", \"nodeDataArray\", \"divClassName\", \"modelChange\"], [\"myDiag\", \"\"]],\n    template: function GodTreeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"h1\", 1);\n        i0.ɵɵtext(3, \"Mythsionary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" by Sheryl\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelement(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"ul\", 7);\n        i0.ɵɵelementStart(11, \"li\");\n        i0.ɵɵelementStart(12, \"a\", 8);\n        i0.ɵɵtext(13, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"li\");\n        i0.ɵɵelementStart(15, \"a\", 9);\n        i0.ɵɵtext(16, \"The Gods Tree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"li\");\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵtext(19, \"The Olympians\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"li\");\n        i0.ɵɵelementStart(21, \"a\", 11);\n        i0.ɵɵtext(22, \"The Heroes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"li\");\n        i0.ɵɵelementStart(24, \"a\", 12);\n        i0.ɵɵtext(25, \"The Flowers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"li\");\n        i0.ɵɵelementStart(27, \"a\", 13);\n        i0.ɵɵtext(28, \"References\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"gojs-diagram\", 14, 15);\n        i0.ɵɵlistener(\"modelChange\", function GodTreeComponent_Template_gojs_diagram_modelChange_30_listener($event) {\n          return ctx.onModelChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"initDiagram\", ctx.initDiagram)(\"modelData\", ctx.diagramModelData)(\"nodeDataArray\", ctx.familyData)(\"divClassName\", ctx.diagramDivClassName);\n      }\n    },\n    directives: [i1.RouterLinkWithHref, i2.DiagramComponent],\n    styles: [\"@import\\\"http://fonts.googleapis.com/css?family=Roboto:400,400italic,500,500italic,700,700italic,900,900italic,300italic,300,100italic,100\\\";body[_ngcontent-%COMP%]{font-family:Roboto,sans-serif}.myDiagramDiv[_ngcontent-%COMP%]{background:whitesmoke;width:700px;height:300px;border:1px solid black}.myPaletteDiv[_ngcontent-%COMP%]{background:lightcyan;border:1px solid navy;width:125px;height:300px}.myOverviewDiv[_ngcontent-%COMP%]{width:200px;height:150px;background:whitesmoke;border:1px solid black}.left[_ngcontent-%COMP%]{float:left;padding:5px;margin:5px}.box[_ngcontent-%COMP%]{border:solid 1px black;background:whitesmoke;box-shadow:0 4px 8px #0003,0 6px 20px #00000030}.clear[_ngcontent-%COMP%]{clear:both}\"]\n  });\n  return GodTreeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}